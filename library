#include <sys/stat.h> //change mode function (chmod) & previladge code
#include <fcntl.h> //Permisssions (0644)
#include <string.h> // controll string io
#include <stdbool.h> //use bool type

//error handel
#include <stdio.h> //standed I/O , (printf, perror)
#include <stdlib.h>  // high level I/o ,(exit)
#include <errno.h> //storeerror number (errno)

//low level
#include <unistd.h> //low level I/o , (open,read,write,close,lseek)

//high level
#include <stdio.h> //(fopen,fscanf/fprintf/fread/fwrite/fclose)

//memory
#include <stdlib.h> //malloc() , calloc() , free()

//process fork / pipes(low and uniderectional)
#include <sys/wait.h> //waitpid()
#include <sys/types.h> // "pid_t" data type
#include <unistd.h> // fork(),sleep(),pipe()

//msg queue
#include <sys/types.h> // "key_t" data type
#include <sys/ipc.h> // inter process communication "ftok()"
#include <sys/msg.h> // "msgget()","msgsnd()","msgrcv()","msgctl()"
#include <sys/stat.h> // previladge code "S_"

//shared memory

//Semaphores

//sickets

//treads
